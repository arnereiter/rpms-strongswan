Index: strongswan-5.0.0/init/Makefile.am
===================================================================
--- strongswan-5.0.0.orig/init/Makefile.am
+++ strongswan-5.0.0/init/Makefile.am
@@ -1,5 +1,5 @@
 
-SUBDIRS =
+SUBDIRS = sysvinit
 
 if HAVE_SYSTEMD
   SUBDIRS += systemd
Index: strongswan-5.0.0/init/sysvinit/Makefile.am
===================================================================
--- /dev/null
+++ strongswan-5.0.0/init/sysvinit/Makefile.am
@@ -0,0 +1 @@
+noinst_DATA = strongswan
Index: strongswan-5.0.0/init/sysvinit/strongswan.in
===================================================================
--- /dev/null
+++ strongswan-5.0.0/init/sysvinit/strongswan.in
@@ -0,0 +1,100 @@
+#!/bin/sh
+#
+# strongswan   An implementation of key management system for IPsec
+#
+# chkconfig:   - 48 52
+# description: Starts or stops the Strongswan daemon.
+
+### BEGIN INIT INFO
+# Provides: ipsec
+# Required-Start: $network $remote_fs $syslog $named
+# Required-Stop: $syslog $remote_fs
+# Default-Start:
+# Default-Stop: 0 1 6
+# Short-Description: Start Strongswan daemons at boot time
+### END INIT INFO
+
+# Source function library.
+. /etc/rc.d/init.d/functions
+
+exec="@sbindir@/@ipsec_script@"
+prog="strongswan"
+status_prog="starter"
+config="/etc/strongswan/strongswan.conf"
+
+lockfile=/var/lock/subsys/$prog
+
+start() {
+    [ -x $exec ] || exit 5
+    [ -f $config ] || exit 6
+    echo -n $"Starting $prog: "
+    daemon $exec start
+    retval=$?
+    echo
+    [ $retval -eq 0 ] && touch $lockfile
+    return $retval
+}
+
+stop() {
+    echo -n $"Stopping $prog: "
+    $exec stop
+    retval=$?
+    echo
+    [ $retval -eq 0 ] && rm -f $lockfile
+    return $retval
+}
+
+restart() {
+    stop
+    start
+}
+
+reload() {
+    restart
+}
+
+force_reload() {
+    restart
+}
+
+_status() {
+    # run checks to determine if the service is running or use generic status
+    status $status_prog
+}
+
+_status_q() {
+    _status >/dev/null 2>&1
+}
+
+
+case "$1" in
+    start)
+        _status_q && exit 0
+        $1
+        ;;
+    stop)
+        _status_q || exit 0
+        $1
+        ;;
+    restart)
+        $1
+        ;;
+    reload)
+        _status_q || exit 7
+        $1
+        ;;
+    force-reload)
+        force_reload
+        ;;
+    status)
+        _status
+        ;;
+    condrestart|try-restart)
+        _status_q || exit 0
+        restart
+        ;;
+    *)
+        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
+        exit 2
+esac
+exit $?
Index: strongswan-5.0.0/configure.in
===================================================================
--- strongswan-5.0.0.orig/configure.in
+++ strongswan-5.0.0/configure.in
@@ -1082,6 +1082,8 @@ AC_OUTPUT(
 	man/Makefile
 	init/Makefile
 	init/systemd/Makefile
+	init/sysvinit/Makefile
+	init/sysvinit/strongswan
 	src/Makefile
 	src/include/Makefile
 	src/libstrongswan/Makefile
Index: strongswan-5.0.0/init/sysvinit/strongswan
===================================================================
--- /dev/null
+++ strongswan-5.0.0/init/sysvinit/strongswan
@@ -0,0 +1,100 @@
+#!/bin/sh
+#
+# strongswan   An implementation of key management system for IPsec
+#
+# chkconfig:   - 48 52
+# description: Starts or stops the Strongswan daemon.
+
+### BEGIN INIT INFO
+# Provides: ipsec
+# Required-Start: $network $remote_fs $syslog $named
+# Required-Stop: $syslog $remote_fs
+# Default-Start:
+# Default-Stop: 0 1 6
+# Short-Description: Start Strongswan daemons at boot time
+### END INIT INFO
+
+# Source function library.
+. /etc/rc.d/init.d/functions
+
+exec="@SBINDIR@/@IPSEC_SCRIPT@"
+prog="strongswan"
+status_prog="starter"
+config="/etc/strongswan/strongswan.conf"
+
+lockfile=/var/lock/subsys/$prog
+
+start() {
+    [ -x $exec ] || exit 5
+    [ -f $config ] || exit 6
+    echo -n $"Starting $prog: "
+    daemon $exec start
+    retval=$?
+    echo
+    [ $retval -eq 0 ] && touch $lockfile
+    return $retval
+}
+
+stop() {
+    echo -n $"Stopping $prog: "
+    $exec stop
+    retval=$?
+    echo
+    [ $retval -eq 0 ] && rm -f $lockfile
+    return $retval
+}
+
+restart() {
+    stop
+    start
+}
+
+reload() {
+    restart
+}
+
+force_reload() {
+    restart
+}
+
+_status() {
+    # run checks to determine if the service is running or use generic status
+    status $status_prog
+}
+
+_status_q() {
+    _status >/dev/null 2>&1
+}
+
+
+case "$1" in
+    start)
+        _status_q && exit 0
+        $1
+        ;;
+    stop)
+        _status_q || exit 0
+        $1
+        ;;
+    restart)
+        $1
+        ;;
+    reload)
+        _status_q || exit 7
+        $1
+        ;;
+    force-reload)
+        force_reload
+        ;;
+    status)
+        _status
+        ;;
+    condrestart|try-restart)
+        _status_q || exit 0
+        restart
+        ;;
+    *)
+        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
+        exit 2
+esac
+exit $?
